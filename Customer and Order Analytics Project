How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!
How many of those orders were for an iPhone?
Select the customer account numbers for all the orders that were placed in February.
Which product was the cheapest one sold in January, and what was the price?
What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT (orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone';

SELECT acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid;


SELECT distinct Product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;


SELECT sum(quantity)*price as revenue, product
FROM BIT_DB.JanSales 
GROUP BY product;

select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


select 
count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2;


Advanced Data Filtering using 'like' and "%'

SELECT orderdate
FROM BIT_DB.FebSales    
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';


SELECT location 
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35'


SELECT sum(quantity)
FROM BIT_DB.Febsales
WHERE orderdate like '02/18/19%'


SELECT distinct Product
FROM BIT_DB.Febsales
WHERE Product like '%Batteries%'


SELECT distinct Product 
FROM BIT_DB.FebSales
WHERE Price like '&.99'

